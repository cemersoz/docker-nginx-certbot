#!/usr/lib/python3
import os
import logging
import time
from threading import Thread

logger = logging.getLogger(__name__)

class CertManager(Thread):
  def __init__(self, update_interval=300):
    super().__init__()
    self.email = os.environ.get("CERTBOT_EMAIL")
    self.domains_in = "/domains/domains.txt"
    self.domains_out = "/domains/certed.txt"
    self.update_interval = update_interval

  def get_cert(self, domain):
    command = "cerbot --nginx -m {0} -d {1} -n --agree-tos"\
              .format(self.email, self.update_interval)
    return os.system(command)

  def run(self):
    while True:
      out_file = open(self.domains_out, 'r')
      certed_domains = [line.strip() for line in out_file.readlines()]
      out_file.close()

      out_file = open(self.domains_out, 'a')
      domain_file = open(self.domains_in, 'r')
      for line in domain_file.readlines():
        if line.strip() not in certed_domains:
          if self.get_cert(line.strip()):
            logger.info("I just got a certificate for {0}!".format(line))
            out_file.write(line.strip())
          else:
            logger.error("I failed to get a certificate for {0}. SAD!".format(line))
      out_file.close()
      domain_file.close()
      time.sleep(self.update_interval)

if __name__ == "__main__":
  CertManager().start()
